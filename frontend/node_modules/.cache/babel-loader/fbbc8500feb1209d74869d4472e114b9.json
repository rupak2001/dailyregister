{"ast":null,"code":"var _jsxFileName = \"/home/rupak/Desktop/re_proj/proj1/frontend/src/stats.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Chart from 'chart.js';\nimport './css/content.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar computer, maths, chemistry, electrical, mechanics, mechanical_lab, computer_lab, electrical_lab, chemistry_lab, english_lab;\nvar chartRef = /*#__PURE__*/React.createRef();\n\nvar Statreport = () => {\n  _s();\n\n  useEffect(() => {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    fetch(\"http://localhost:8000/get_stats\").then(res => res.json()).then(data => {\n      chemistry = data[0].chemistry;\n      maths = data[0].maths;\n      electrical = data[0].electrical;\n      computer = data[0].computer;\n      mechanics = data[0].mechanics;\n      mechanical_lab = data[0].mechanical_lab;\n      chemistry_lab = data[0].chemistry_lab;\n      computer_lab = data[0].computer_lab;\n      english_lab = data[0].english_lab;\n      electrical_lab = data[0].electrical_lab;\n      chemistry = chemistry.attended;\n      maths = maths.attended;\n      electrical = electrical.attended;\n      computer = computer.attended;\n      mechanics = mechanics.attended;\n      mechanical_lab = mechanical_lab.attended;\n      chemistry_lab = chemistry_lab.attended;\n      computer_lab = computer_lab.attended;\n      english_lab = english_lab.attended;\n      electrical_lab = electrical_lab.attended;\n      console.log(computer, maths, chemistry, electrical, mechanics, mechanical_lab, computer_lab, electrical_lab, chemistry_lab, english_lab);\n    });\n    new Chart(myChartRef, {\n      type: \"bar\",\n      data: {\n        datasets: [{\n          label: \"Sales\",\n          data: [computer, maths, chemistry, electrical, mechanics, mechanical_lab, computer_lab, electrical_lab, chemistry_lab, english_lab]\n        }]\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"data reflects no of attendence given each day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"att_chart\",\n      chartRef: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Statreport, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Statreport;\nexport default Statreport;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statreport\");","map":{"version":3,"sources":["/home/rupak/Desktop/re_proj/proj1/frontend/src/stats.js"],"names":["React","useEffect","Chart","computer","maths","chemistry","electrical","mechanics","mechanical_lab","computer_lab","electrical_lab","chemistry_lab","english_lab","chartRef","createRef","Statreport","myChartRef","current","getContext","fetch","then","res","json","data","attended","console","log","type","datasets","label"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport Chart from 'chart.js'\nimport './css/content.css'\nvar computer,maths,chemistry,electrical,mechanics,mechanical_lab,computer_lab,electrical_lab,chemistry_lab,english_lab\nvar chartRef = React.createRef();\nvar Statreport = ()=>{\n    useEffect(()=>{\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\n        \n        \n        fetch(\"http://localhost:8000/get_stats\")\n        .then(res=>res.json())\n        .then(data=>{\n            chemistry = data[0].chemistry\n            maths = data[0].maths \n            electrical = data[0].electrical\n            computer = data[0].computer\n            mechanics = data[0].mechanics\n            mechanical_lab = data[0].mechanical_lab\n            chemistry_lab = data[0].chemistry_lab\n            computer_lab = data[0].computer_lab\n            english_lab = data[0].english_lab\n            electrical_lab = data[0].electrical_lab\n\n\n            chemistry = chemistry.attended\n            maths = maths.attended\n            electrical = electrical.attended\n            computer = computer.attended\n            mechanics = mechanics.attended\n            mechanical_lab = mechanical_lab.attended\n            chemistry_lab = chemistry_lab.attended\n            computer_lab = computer_lab.attended\n            english_lab = english_lab.attended\n            electrical_lab = electrical_lab.attended\n            console.log(computer,maths,chemistry,electrical,mechanics,mechanical_lab,computer_lab,electrical_lab,chemistry_lab,english_lab)\n        })\n        new Chart(myChartRef, {\n            type: \"bar\",\n            data: {\n                datasets: [\n                    {\n                        label: \"Sales\",\n                        data: [computer,maths,chemistry,electrical,mechanics,mechanical_lab,computer_lab,electrical_lab,chemistry_lab,english_lab],\n                    }\n                ]\n            }\n        })\n    },[])\n\n\n    return(\n        <div>\n            <p>data reflects no of attendence given each day</p>\n            <canvas id = \"att_chart\" chartRef/>\n        </div>\n    )\n}\n\nexport default Statreport"]},"metadata":{},"sourceType":"module"}
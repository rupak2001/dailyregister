{"ast":null,"code":"var _jsxFileName = \"/home/rupak/Desktop/re_proj/proj1/frontend/src/stats.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './css/content.css';\nimport { Bar, Doughnut, Pie } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar computer, maths, chemistry, electrical, mechanics, mechanical_lab, computer_lab, electrical_lab, chemistry_lab, english_lab;\n\nvar Statreport = () => {\n  _s();\n\n  var [chart_dat, up_dat] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/get_stats\").then(res => res.json()).then(data => {\n      chemistry = data[0].chemistry;\n      maths = data[0].maths;\n      electrical = data[0].electrical;\n      computer = data[0].computer;\n      mechanics = data[0].mechanics;\n      mechanical_lab = data[0].mechanical_lab;\n      chemistry_lab = data[0].chemistry_lab;\n      computer_lab = data[0].computer_lab;\n      english_lab = data[0].english_lab;\n      electrical_lab = data[0].electrical_lab;\n      chemistry = chemistry.attended;\n      maths = maths.attended;\n      electrical = electrical.attended;\n      computer = computer.attended;\n      mechanics = mechanics.attended;\n      mechanical_lab = mechanical_lab.attended;\n      chemistry_lab = chemistry_lab.attended;\n      computer_lab = computer_lab.attended;\n      english_lab = english_lab.attended;\n      electrical_lab = electrical_lab.attended;\n      console.log(computer, chemistry, maths, electrical, mechanics, computer_lab, chemistry_lab, mechanical_lab, english_lab, electrical_lab);\n      up_dat({\n        labels: ['computer', 'chemistry', 'maths', 'electrical', 'mechanics', 'computer_lab', 'chemistry_lab', \"mechanical_lab\", \"english_lab\", \"electrical_lab\"],\n        datasets: [{\n          label: \"ATTENDENCE STATUS\",\n          data: [computer, chemistry, maths, electrical, mechanics, computer_lab, chemistry_lab, mechanical_lab, english_lab, electrical_lab],\n          backgroundColor: ['red', '#06b2b8', 'orange', 'yellow', 'violet', 'deep-green', 'magenta', 'brown', 'navy', '#ebab15']\n        }]\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart_cont\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"data reflects no of attendence given each day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: chart_dat,\n      options: {\n        'fontStyle': \"bold\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Statreport, \"vlNbKkYtwXlnDHmshqWKSVLmw38=\");\n\n_c = Statreport;\nexport default Statreport;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statreport\");","map":{"version":3,"sources":["/home/rupak/Desktop/re_proj/proj1/frontend/src/stats.js"],"names":["React","useEffect","useState","Bar","Doughnut","Pie","Chart","computer","maths","chemistry","electrical","mechanics","mechanical_lab","computer_lab","electrical_lab","chemistry_lab","english_lab","Statreport","chart_dat","up_dat","fetch","then","res","json","data","attended","console","log","labels","datasets","label","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './css/content.css'\nimport { Bar, Doughnut, Pie } from 'react-chartjs-2'\nimport Chart from 'chart.js/auto'\nvar computer, maths, chemistry, electrical, mechanics, mechanical_lab, computer_lab, electrical_lab, chemistry_lab, english_lab\nvar Statreport = () => {\n    var [chart_dat, up_dat] = useState(null)\n    useEffect(() => {\n        fetch(\"http://localhost:8000/get_stats\")\n            .then(res => res.json())\n            .then(data => {\n                chemistry = data[0].chemistry\n                maths = data[0].maths\n                electrical = data[0].electrical\n                computer = data[0].computer\n                mechanics = data[0].mechanics\n                mechanical_lab = data[0].mechanical_lab\n                chemistry_lab = data[0].chemistry_lab\n                computer_lab = data[0].computer_lab\n                english_lab = data[0].english_lab\n                electrical_lab = data[0].electrical_lab\n\n\n                chemistry = chemistry.attended\n                maths = maths.attended\n                electrical = electrical.attended\n                computer = computer.attended\n                mechanics = mechanics.attended\n                mechanical_lab = mechanical_lab.attended\n                chemistry_lab = chemistry_lab.attended\n                computer_lab = computer_lab.attended\n                english_lab = english_lab.attended\n                electrical_lab = electrical_lab.attended\n                console.log(computer, chemistry, maths, electrical, mechanics, computer_lab, chemistry_lab, mechanical_lab, english_lab, electrical_lab)\n                up_dat({\n                    labels: ['computer', 'chemistry', 'maths', 'electrical', 'mechanics', 'computer_lab', 'chemistry_lab', \"mechanical_lab\", \"english_lab\", \"electrical_lab\"],\n                    datasets: [\n                        {\n                            label: \"ATTENDENCE STATUS\",\n                            data: [computer, chemistry, maths, electrical, mechanics, computer_lab, chemistry_lab, mechanical_lab, english_lab, electrical_lab],\n                            backgroundColor: ['red', '#06b2b8', 'orange', 'yellow', 'violet', 'deep-green', 'magenta', 'brown', 'navy', '#ebab15']\n                        }\n                    ]\n                })\n            })\n\n    }, [])\n\n\n    return (\n        <div className = \"chart_cont\">\n            <p>data reflects no of attendence given each day</p>\n            <Doughnut data={chart_dat} options={{'fontStyle':\"bold\"}}/>\n        </div>\n    )\n}\n\nexport default Statreport"]},"metadata":{},"sourceType":"module"}